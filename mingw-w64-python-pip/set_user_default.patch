From: Barry Warsaw <barry@python.org>
Date: Wed, 10 Feb 2016 11:18:37 -0500
Subject: Default to --user in non-virtual environments.

When running as a normal user in a non-virtual environment, default to
--user.  When inside virtual environments, when running as root or when
--prefix or --target are specified, keep the default behavior.

Author: Didier Roche <didrocks@ubuntu.com>,
        Barry Warsaw <barry@debian.org>,
        Anatoly techtonik <techtonik@gmail.com>,
        Andrej Shadura <andrewsh@debian.org>
Bug: https://github.com/pypa/pip/issues/1668
Bug-Debian: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=725848
Bug-Ubuntu: https://bugs.launchpad.net/ubuntu/+source/pip/+bug/1419695

Patch-Name: set_user_default.patch
---
 docs/html/user_guide.rst              |  8 +++++---
 src/pip/_internal/commands/install.py | 32 +++++++++++++++++++++++++++++---
 2 files changed, 34 insertions(+), 6 deletions(-)

diff --git a/docs/html/user_guide.rst b/docs/html/user_guide.rst
index 702a97d..e73305d 100644
--- a/docs/html/user_guide.rst
+++ b/docs/html/user_guide.rst
@@ -600,9 +600,11 @@ With Python 2.6 came the `"user scheme" for installation
 which means that all Python distributions support an alternative install
 location that is specific to a user.  The default location for each OS is
 explained in the python documentation for the `site.USER_BASE
-<https://docs.python.org/3/library/site.html#site.USER_BASE>`_ variable.
-This mode of installation can be turned on by specifying the :ref:`--user
-<install_--user>` option to ``pip install``.
+<https://docs.python.org/3/library/site.html#site.USER_BASE>`_ variable.  This mode
+of installation is the default on Debian and derivative systems (--user has no
+effect) when inside non-virtual environments, and when the script is run as
+non-root. This behavior can be turned off by specifying the
+:ref:`--system <install_--system>` option to ``pip install``.
 
 Moreover, the "user scheme" can be customized by setting the
 ``PYTHONUSERBASE`` environment variable, which updates the value of
diff --git a/src/pip/_internal/commands/install.py b/src/pip/_internal/commands/install.py
index 8c2c32f..8471f12 100644
--- a/src/pip/_internal/commands/install.py
+++ b/src/pip/_internal/commands/install.py
@@ -46,6 +46,7 @@ if MYPY_CHECK_RUNNING:
     from pip._internal.req.req_install import InstallRequirement
     from pip._internal.wheel_builder import BinaryAllowedPredicate
 
+from pip._internal.locations import running_under_virtualenv
 
 logger = logging.getLogger(__name__)
 
@@ -110,11 +111,14 @@ class InstallCommand(RequirementCommand):
             help="Install to the Python user install directory for your "
                  "platform. Typically ~/.local/, or %APPDATA%\\Python on "
                  "Windows. (See the Python documentation for site.USER_BASE "
-                 "for full details.)")
+                 "for full details.)  On Debian systems, this is the "
+                 "default when running outside of a virtual environment "
+                 "and not as root.")
+
         self.cmd_opts.add_option(
             '--no-user',
-            dest='use_user_site',
-            action='store_false',
+            dest='use_system_location',
+            action='store_true',
             help=SUPPRESS_HELP)
         self.cmd_opts.add_option(
             '--root',
@@ -131,6 +135,13 @@ class InstallCommand(RequirementCommand):
             help="Installation prefix where lib, bin and other top-level "
                  "folders are placed")
 
+        self.cmd_opts.add_option(
+            '--system',
+            dest='use_system_location',
+            action='store_true',
+            help="Install using the system scheme (overrides --user on "
+                 "Debian systems)")
+
         self.cmd_opts.add_option(cmdoptions.build_dir())
 
         self.cmd_opts.add_option(cmdoptions.src())
@@ -240,6 +251,21 @@ class InstallCommand(RequirementCommand):
 
         cmdoptions.check_dist_restriction(options, check_target=True)
 
+        if options.python_version:
+            python_versions = [options.python_version]
+        else:
+            python_versions = None
+
+        # compute install location defaults
+        if (not options.use_user_site and not options.prefix_path and not
+                options.target_dir and not options.use_system_location):
+            if not running_under_virtualenv():
+                options.use_user_site = True
+
+        if options.use_system_location:
+            options.use_user_site = False
+
+        options.src_dir = os.path.abspath(options.src_dir)
         install_options = options.install_options or []
 
         logger.debug("Using %s", get_pip_version())
